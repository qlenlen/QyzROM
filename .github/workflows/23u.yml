name: Build QyzROM

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        target: [ dm3q ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Checkout another repo
        uses: actions/checkout@v4
        with:
          repository: qlenlen/TIK_mine
          ref: master
          token: ${{ secrets.TOKEN }}
          path: qyz
          submodules: 'recursive'

      - name: Free disk space (1/3)
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL /home/runner/actions-runner/cached/
          sudo docker image prune --all --force
          sudo docker builder prune -a

      - name: Free disk space (2/3)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Free disk space (3/3)
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: 'compiler_cmake'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r qyz/requirements.txt

      - name: Set up build environment
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive
          sudo apt install -yq \
            jq attr ccache clang ffmpeg golang \
            libbrotli-dev libgtest-dev libprotobuf-dev libunwind-dev libpcre2-dev \
            libzstd-dev linux-modules-extra-$(uname -r) lld jq protobuf-compiler pcre2-utils webp \
            curl xxd patchelf flex bison libarchive-tools build-essential python3.12-venv device-tree-compiler \
            lz4 cpio
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Download firmware
        run: |
          git clone https://github.com/keklick1337/gnsf.git
          cd gnsf
          mkdir -p ../qyz/UI7
          pip install -r requirements.txt
          ./gnsf.py -m SM-S9180 -r CHC check
          ./gnsf.py \
            -m SM-S9180 \
            -r CHC \
            -s R5CW139E77Z \
            download \
            -O ../qyz/UI7
          ls ../qyz/UI7
          cd ..

      - name: Build ROM
        run: |
          cd qyz
          export PYTHONPATH=$(pwd)
          python src/device/dm3q_chn.py

      - name: Upload to GoFile
        run: |
          ZIP_FILE=$(find out -maxdepth 1 -type f -name "*.zip" | head -n 1)

          RESPONSE=$(curl -s -F "file=@$ZIP_FILE" -F "token=${{ secrets.GOFILE_TOKEN }}" -F "folderId=${{ secrets.GOFILE_FOLDER_ID }}" "https://upload-eu-par.gofile.io/uploadFile")

          echo "Uploaded successfully! Download link:"
          echo "$RESPONSE" | jq -r '.data.downloadPage'
          echo "WARNING! THESE BUILDS MAY NOT BOOTABLE, ONLY FLASH FOR TESTING PURPOSES ONLY IF THE DEVELOPER TOLD YOU."
